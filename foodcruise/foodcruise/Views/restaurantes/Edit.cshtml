@model foodcruise.Models.restaurante

@{
    ViewBag.Title = "Editar restaurante";
}

<h2>@Html.DisplayFor(model => model.nombre)</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Editar Restaurante</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.horario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.horario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.horario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.principal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                <select id="principal" name="principal" class="form-control">
                    @if (Model.principal == 0)
                    {
                        <option value="0" selected>No</option>
                        <option value="1">Si</option>
                    }
                    else
                    {
                        <option value="0">No</option>
                        <option value="1" selected>Si</option>
                    }

                </select>
                @Html.ValidationMessageFor(model => model.principal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.capacidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.capacidad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.capacidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver", "Index", new { id = Model.id })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
